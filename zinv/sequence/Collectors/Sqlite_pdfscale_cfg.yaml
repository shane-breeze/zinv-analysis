name: "Events"
output: "/vols/cms/sdb15/database_outputs/"
variations: []
attributes:
    Both:
        run: "ev: ev.run"
        luminosityBlock: "ev: ev.luminosityBlock"
        event: "ev: ev.event"
        isdata: "ev, source, nsig: np.full(ev.size, ev.config.dataset.isdata, dtype=np.bool8)"
        parent: "ev, source, nsig: np.full(ev.size, ev.config.dataset.parent)"
        sample: "ev, source, nsig: np.full(ev.size, ev.config.dataset.name)"
        METnoX_pt: "ev, source, nsig: ev.METnoX_pt(ev, source, nsig)"
        METnoX_phi: "ev, source, nsig: ev.METnoX_phi(ev, source, nsig)"
        MET_pt: "ev, source, nsig: ev.MET_ptShift(ev, source, nsig)"
        MET_phi: "ev, source, nsig: ev.MET_phiShift(ev, source, nsig)"
        CaloMET_pt: "ev, source, nsig: ev.CaloMET_pt"
        CaloMET_phi: "ev, source, nsig: ev.CaloMET_phi"
        MET_dCaloMET: "ev, source, nsig: ev.MET_dCaloMET(ev, source, nsig)"
        MinDPhiJ1234METnoX: "ev, source, nsig: ev.MinDPhiJ1234METnoX(ev, source, nsig)"
        MTW: "ev, source, nsig: ev.MTW(ev, source, nsig)"
        MLL: "ev, source, nsig: ev.MLL(ev, source, nsig)"
        nJetVeto: "ev, source, nsig: ev.JetVeto(ev, source, nsig, 'eta').counts"
        nJetSelection: "ev, source, nsig: ev.JetSelection(ev, source, nsig, 'eta').counts"
        LeadJetSelection_pt: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'ptShift'), 0, ev.size)"
        LeadJetSelection_eta: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'eta'), 0, ev.size)"
        LeadJetSelection_phi: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'phi'), 0, ev.size)"
        LeadJetSelection_chHEF: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'chHEF'), 0, ev.size)"
        LeadJetFwdSelection_pt: "ev, source, nsig: get_nth_object(ev.JetFwdSelection(ev, source, nsig, 'pt'), 0, ev.size)"
        LeadJetFwdSelection_eta: "ev, source, nsig: get_nth_object(ev.JetFwdSelection(ev, source, nsig, 'eta'), 0, ev.size)"
        LeadJetFwdSelection_phi: "ev, source, nsig: get_nth_object(ev.JetFwdSelection(ev, source, nsig, 'phi'), 0, ev.size)"
        NearestJetSelectionMET_pt: "ev, source, nsig: get_attr_for_min_ref(ev.JetSelection(ev, source, nsig, 'ptShift'), ev.JetSelection(ev, source, nsig, 'dphiMET'), ev.size)"
        NearestJetSelectionMET_eta: "ev, source, nsig: get_attr_for_min_ref(ev.JetSelection(ev, source, nsig, 'eta'), ev.JetSelection(ev, source, nsig, 'dphiMET'), ev.size)"
        NearestJetSelectionMET_phi: "ev, source, nsig: get_attr_for_min_ref(ev.JetSelection(ev, source, nsig, 'phi'), ev.JetSelection(ev, source, nsig, 'dphiMET'), ev.size)"
        SecondJetSelection_pt: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'ptShift'), 1, ev.size)"
        SecondJetSelection_eta: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'eta'), 1, ev.size)"
        SecondJetSelection_phi: "ev, source, nsig: get_nth_object(ev.JetSelection(ev, source, nsig, 'phi'), 1, ev.size)"
        nMuonVeto: "ev, source, nsig: ev.MuonVeto(ev, source, nsig, 'eta').counts"
        nMuonSelection: "ev, source, nsig: ev.MuonSelection(ev, source, nsig, 'eta').counts"
        LeadMuonSelection_pt: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'ptShift'), 0, ev.size)"
        LeadMuonSelection_eta: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'eta'), 0, ev.size)"
        LeadMuonSelection_phi: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'phi'), 0, ev.size)"
        SecondMuonSelection_pt: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'ptShift'), 1, ev.size)"
        SecondMuonSelection_eta: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'eta'), 1, ev.size)"
        SecondMuonSelection_phi: "ev, source, nsig: get_nth_object(ev.MuonSelection(ev, source, nsig, 'phi'), 1, ev.size)"
        nElectronVeto: "ev, source, nsig: ev.ElectronVeto(ev, source, nsig, 'eta').counts"
        nElectronSelection: "ev, source, nsig: ev.ElectronSelection(ev, source, nsig, 'eta').counts"
        LeadElectronSelection_pt: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'ptShift'), 0, ev.size)"
        LeadElectronSelection_eta: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'eta'), 0, ev.size)"
        LeadElectronSelection_phi: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'phi'), 0, ev.size)"
        SecondElectronSelection_pt: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'ptShift'), 1, ev.size)"
        SecondElectronSelection_eta: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'eta'), 1, ev.size)"
        SecondElectronSelection_phi: "ev, source, nsig: get_nth_object(ev.ElectronSelection(ev, source, nsig, 'phi'), 1, ev.size)"
        nTauVeto: "ev, source, nsig: ev.TauVeto(ev, source, nsig, 'eta').counts"
        nTauSelection: "ev, source, nsig: ev.TauSelection(ev, source, nsig, 'eta').counts"
        LeadTauSelection_pt: "ev, source, nsig: get_nth_object(ev.TauSelection(ev, source, nsig, 'ptShift'), 0, ev.size)"
        LeadTauSelection_eta: "ev, source, nsig: get_nth_object(ev.TauSelection(ev, source, nsig, 'eta'), 0, ev.size)"
        LeadTauSelection_phi: "ev, source, nsig: get_nth_object(ev.TauSelection(ev, source, nsig, 'phi'), 0, ev.size)"
        nPhotonVeto: "ev, source, nsig: ev.PhotonVeto(ev, source, nsig, 'eta').counts"
        nPhotonSelection: "ev, source, nsig: ev.PhotonSelection(ev, source, nsig, 'eta').counts"
        nBJetVeto: "ev, source, nsig: ev.JetBVeto(ev, source, nsig, 'eta').counts"
        PV_npvsGood: "ev, source, nsig: ev.PV_npvsGood"
        LeptonCharge: "ev, source, nsig: ev.LeptonCharge(ev, source, nsig)"
        IsMETTriggered: "ev, source, nsig: ev.IsMETTriggered(ev)"
        IsSingleMuonTriggered: "ev, source, nsig: ev.IsSingleMuonTriggered(ev)"
        IsSingleElectronTriggered: "ev, source, nsig: ev.IsSingleElectronTriggered(ev)"
        Cutflow_Monojet: "ev, source, nsig: ev.Cutflow_Monojet(ev, source, nsig)"
        Cutflow_MonojetQCD: "ev, source, nsig: ev.Cutflow_MonojetQCD(ev, source, nsig)"
        Cutflow_SingleMuon: "ev, source, nsig: ev.Cutflow_SingleMuon(ev, source, nsig)"
        Cutflow_SingleMuonQCD: "ev, source, nsig: ev.Cutflow_SingleMuonQCD(ev, source, nsig)"
        Cutflow_DoubleMuon: "ev, source, nsig: ev.Cutflow_DoubleMuon(ev, source, nsig)"
        Cutflow_SingleElectron: "ev, source, nsig: ev.Cutflow_SingleElectron(ev, source, nsig)"
        Cutflow_SingleElectronQCD: "ev, source, nsig: ev.Cutflow_SingleElectronQCD(ev, source, nsig)"
        Cutflow_DoubleElectron: "ev, source, nsig: ev.Cutflow_DoubleElectron(ev, source, nsig)"
        Cutflow_DoubleElectronAlt: "ev, source, nsig: ev.Cutflow_DoubleElectronAlt(ev, source, nsig)"
        Cutflow_SingleTau: "ev, source, nsig: ev.Cutflow_SingleTau(ev, source, nsig)"
        Flag_goodVertices: "ev, source, nsig: ev.Flag_goodVertices"
        Flag_globalSuperTightHalo2016Filter: "ev, source, nsig: ev.Flag_globalSuperTightHalo2016Filter"
        Flag_HBHENoiseFilter: "ev, source, nsig: ev.Flag_HBHENoiseFilter"
        Flag_HBHENoiseIsoFilter: "ev, source, nsig: ev.Flag_HBHENoiseIsoFilter"
        Flag_EcalDeadCellTriggerPrimitiveFilter: "ev, source, nsig: ev.Flag_EcalDeadCellTriggerPrimitiveFilter"
        Flag_BadPFMuonFilter: "ev, source, nsig: ev.Flag_BadPFMuonFilter"
        Flag_BadGlobalMuon: "ev, source, nsig: ev.Flag_BadGlobalMuon"
        Flag_CloneGlobalMuon: "ev, source, nsig: ev.Flag_CloneGlobalMuon"
        Flag_eeBadScFilter: "ev, source, nsig: ev.Flag_eeBadScFilter"
    MC:
        MET_dpt: "ev, source, nsig: (ev.MET_pt-ev.MET_ptJESOnly)/ev.MET_ptJESOnly"
        MET_dphi: "ev, source, nsig: ev.MET_phi-ev.MET_phiJESOnly"
        LeadJetSelection_dpt: "ev, source, nsig: get_nth_object((ev.JetSelection(ev, source, nsig, 'pt')-ev.JetSelection(ev, source, nsig, 'ptJESOnly'))/ev.JetSelection(ev, source, nsig, 'ptJESOnly'), 0, ev.size)"
        nGenBosonSelection: "ev, source, nsig: ev.nGenBosons(ev)"
        LeptonIsElectron: "ev, source, nsig: ev.LeptonIs(ev, 'Electron')"
        LeptonIsMuon: "ev, source, nsig: ev.LeptonIs(ev, 'Muon')"
        LeptonIsTau: "ev, source, nsig: ev.LeptonIs(ev, 'Tau')"
        nGenTauL: "ev, source, nsig: ev.nGenTauL(ev)"
        WeightXsLumi: "ev, source, nsig: ev.WeightXsLumi(ev)"
        WeightQcdEwk: "ev, source, nsig: ev.WeightQcdEwk(ev, source, nsig)"
        WeightPU: "ev, source, nsig: ev.WeightPU(ev, source, nsig)"
        WeightPreFiring: "ev, source, nsig: ev.WeightPreFiring(ev, source, nsig)"
        WeightMETTrig: "ev, source, nsig: ev.WeightMETTrig(ev, source, nsig)"
        WeightSingleMuonTrig: "ev, source, nsig: 1-jagged_prod(1-ev.MuonSelection(ev, source, nsig, 'WeightmuonTrigSF'))"
        WeightSingleElectronTrig: "ev, source, nsig: 1-jagged_prod(1-ev.ElectronSelection(ev, source, nsig, 'WeighteleTrigSF'))"
        WeightOneMinusElectronVetoNoSelectionIdIsoVeto: "ev, source, nsig: jagged_prod(1-ev.ElectronVetoNoSelection(ev, source, nsig, 'WeighteleIdIsoVetoSF'))"
        WeightOneMinusElectronSelectionIdIsoTight: "ev, source, nsig: jagged_prod(1-ev.ElectronSelection(ev, source, nsig, 'WeighteleIdIsoTightSF'))"
        WeightOneMinusElectronVetoReco: "ev, source, nsig: jagged_prod(1-ev.ElectronVeto(ev, source, nsig, 'WeighteleRecoSF'))"
        WeightOneMinusMuonVetoNoSelectionIdLoose: "ev, source, nsig: jagged_prod(1-ev.MuonVetoNoSelection(ev, source, nsig, 'WeightmuonIdLooseSF'))"
        WeightOneMinusMuonVetoNoSelectionIsoLoose: "ev, source, nsig: jagged_prod(1-ev.MuonVetoNoSelection(ev, source, nsig, 'WeightmuonIsoLooseSF'))"
        WeightOneMinusMuonSelectionIdTight: "ev, source, nsig: jagged_prod(1-ev.MuonSelection(ev, source, nsig, 'WeightmuonIdTightSF'))"
        WeightOneMinusMuonSelectionIsoTight: "ev, source, nsig: jagged_prod(1-ev.MuonSelection(ev, source, nsig, 'WeightmuonIsoTightSF'))"
        WeightOneMinusPhotonVetoIdLoose: "ev, source, nsig: jagged_prod(1-ev.PhotonVeto(ev, source, nsig, 'WeightphotonIdLooseSF'))"
        WeightOneMinusPhotonVetoPixelSeedVeto: "ev, source, nsig: jagged_prod(1-ev.PhotonVeto(ev, source, nsig, 'WeightphotonPixelSeedVetoSF'))"
        WeightOneMinusTauSelectionIdTight: "ev, source, nsig: jagged_prod(1-ev.TauSelection(ev, source, nsig, 'WeighttauIdTightSF'))"
        WeightOneMinusJetBVetoIdMedium: "ev, source, nsig: jagged_prod(1-ev.JetBVeto(ev, source, nsig, 'btagSF'))"
        WeightMuonSelectionIdTight: "ev, source, nsig: jagged_prod(ev.MuonSelection(ev, source, nsig, 'WeightmuonIdTightSF'))"
        WeightMuonSelectionIsoTight: "ev, source, nsig: jagged_prod(ev.MuonSelection(ev, source, nsig, 'WeightmuonIsoTightSF'))"
        WeightTauSelectionIdTight: "ev, source, nsig: jagged_prod(ev.TauSelection(ev, source, nsig, 'WeighttauIdTightSF'))"
        WeightElectronSelectionIdIsoTight: "ev, source, nsig: jagged_prod(ev.ElectronSelection(ev, source, nsig, 'WeighteleIdIsoTightSF'))"
        WeightElectronSelectionReco: "ev, source, nsig: jagged_prod(ev.ElectronSelection(ev, source, nsig, 'WeighteleRecoSF'))"
        Generator_id1: "ev, source, nsig: ev.Generator_id1"
        Generator_id2: "ev, source, nsig: ev.Generator_id2"
        Generator_x1: "ev, source, nsig: ev.Generator_x1"
        Generator_x2: "ev, source, nsig: ev.Generator_x2"
        nLHEScaleWeight: "ev, source, nsig: ev.nLHEScaleWeight if ev.hasbranch('nLHEScaleWeight') else np.zeros(ev.size, dtype=np.int32)"
        nLHEPdfWeight: "ev, source, nsig: ev.nLHEPdfWeight if ev.hasbranch('nLHEPdfWeight') else np.zeros(ev.size, dtype=np.int32)"
        LHEScaleWeight0: "ev, source, nsig: ev.WeightScaleVariations(ev, 0)"
        LHEScaleWeight1: "ev, source, nsig: ev.WeightScaleVariations(ev, 1)"
        LHEScaleWeight2: "ev, source, nsig: ev.WeightScaleVariations(ev, 2)"
        LHEScaleWeight3: "ev, source, nsig: ev.WeightScaleVariations(ev, 3)"
        LHEScaleWeight4: "ev, source, nsig: ev.WeightScaleVariations(ev, 4)"
        LHEScaleWeight5: "ev, source, nsig: ev.WeightScaleVariations(ev, 5)"
        LHEScaleWeight6: "ev, source, nsig: ev.WeightScaleVariations(ev, 6)"
        LHEScaleWeight7: "ev, source, nsig: ev.WeightScaleVariations(ev, 7)"
        LHEScaleWeight8: "ev, source, nsig: ev.WeightScaleVariations(ev, 8)"
        LHEPdfWeight0: "ev, source, nsig: ev.WeightPdfVariations(ev, 0)"
        LHEPdfWeight1: "ev, source, nsig: ev.WeightPdfVariations(ev, 1)"
        LHEPdfWeight2: "ev, source, nsig: ev.WeightPdfVariations(ev, 2)"
        LHEPdfWeight3: "ev, source, nsig: ev.WeightPdfVariations(ev, 3)"
        LHEPdfWeight4: "ev, source, nsig: ev.WeightPdfVariations(ev, 4)"
        LHEPdfWeight5: "ev, source, nsig: ev.WeightPdfVariations(ev, 5)"
        LHEPdfWeight6: "ev, source, nsig: ev.WeightPdfVariations(ev, 6)"
        LHEPdfWeight7: "ev, source, nsig: ev.WeightPdfVariations(ev, 7)"
        LHEPdfWeight8: "ev, source, nsig: ev.WeightPdfVariations(ev, 8)"
        LHEPdfWeight9: "ev, source, nsig: ev.WeightPdfVariations(ev, 9)"
        LHEPdfWeight10: "ev, source, nsig: ev.WeightPdfVariations(ev, 10)"
        LHEPdfWeight11: "ev, source, nsig: ev.WeightPdfVariations(ev, 11)"
        LHEPdfWeight12: "ev, source, nsig: ev.WeightPdfVariations(ev, 12)"
        LHEPdfWeight13: "ev, source, nsig: ev.WeightPdfVariations(ev, 13)"
        LHEPdfWeight14: "ev, source, nsig: ev.WeightPdfVariations(ev, 14)"
        LHEPdfWeight15: "ev, source, nsig: ev.WeightPdfVariations(ev, 15)"
        LHEPdfWeight16: "ev, source, nsig: ev.WeightPdfVariations(ev, 16)"
        LHEPdfWeight17: "ev, source, nsig: ev.WeightPdfVariations(ev, 17)"
        LHEPdfWeight18: "ev, source, nsig: ev.WeightPdfVariations(ev, 18)"
        LHEPdfWeight19: "ev, source, nsig: ev.WeightPdfVariations(ev, 19)"
        LHEPdfWeight20: "ev, source, nsig: ev.WeightPdfVariations(ev, 20)"
        LHEPdfWeight21: "ev, source, nsig: ev.WeightPdfVariations(ev, 21)"
        LHEPdfWeight22: "ev, source, nsig: ev.WeightPdfVariations(ev, 22)"
        LHEPdfWeight23: "ev, source, nsig: ev.WeightPdfVariations(ev, 23)"
        LHEPdfWeight24: "ev, source, nsig: ev.WeightPdfVariations(ev, 24)"
        LHEPdfWeight25: "ev, source, nsig: ev.WeightPdfVariations(ev, 25)"
        LHEPdfWeight26: "ev, source, nsig: ev.WeightPdfVariations(ev, 26)"
        LHEPdfWeight27: "ev, source, nsig: ev.WeightPdfVariations(ev, 27)"
        LHEPdfWeight28: "ev, source, nsig: ev.WeightPdfVariations(ev, 28)"
        LHEPdfWeight29: "ev, source, nsig: ev.WeightPdfVariations(ev, 29)"
        LHEPdfWeight30: "ev, source, nsig: ev.WeightPdfVariations(ev, 30)"
        LHEPdfWeight31: "ev, source, nsig: ev.WeightPdfVariations(ev, 31)"
        LHEPdfWeight32: "ev, source, nsig: ev.WeightPdfVariations(ev, 32)"
        LHEPdfWeight33: "ev, source, nsig: ev.WeightPdfVariations(ev, 33)"
        LHEPdfWeight34: "ev, source, nsig: ev.WeightPdfVariations(ev, 34)"
        LHEPdfWeight35: "ev, source, nsig: ev.WeightPdfVariations(ev, 35)"
        LHEPdfWeight36: "ev, source, nsig: ev.WeightPdfVariations(ev, 36)"
        LHEPdfWeight37: "ev, source, nsig: ev.WeightPdfVariations(ev, 37)"
        LHEPdfWeight38: "ev, source, nsig: ev.WeightPdfVariations(ev, 38)"
        LHEPdfWeight39: "ev, source, nsig: ev.WeightPdfVariations(ev, 39)"
        LHEPdfWeight40: "ev, source, nsig: ev.WeightPdfVariations(ev, 40)"
        LHEPdfWeight41: "ev, source, nsig: ev.WeightPdfVariations(ev, 41)"
        LHEPdfWeight42: "ev, source, nsig: ev.WeightPdfVariations(ev, 42)"
        LHEPdfWeight43: "ev, source, nsig: ev.WeightPdfVariations(ev, 43)"
        LHEPdfWeight44: "ev, source, nsig: ev.WeightPdfVariations(ev, 44)"
        LHEPdfWeight45: "ev, source, nsig: ev.WeightPdfVariations(ev, 45)"
        LHEPdfWeight46: "ev, source, nsig: ev.WeightPdfVariations(ev, 46)"
        LHEPdfWeight47: "ev, source, nsig: ev.WeightPdfVariations(ev, 47)"
        LHEPdfWeight48: "ev, source, nsig: ev.WeightPdfVariations(ev, 48)"
        LHEPdfWeight49: "ev, source, nsig: ev.WeightPdfVariations(ev, 49)"
        LHEPdfWeight50: "ev, source, nsig: ev.WeightPdfVariations(ev, 50)"
        LHEPdfWeight51: "ev, source, nsig: ev.WeightPdfVariations(ev, 51)"
        LHEPdfWeight52: "ev, source, nsig: ev.WeightPdfVariations(ev, 52)"
        LHEPdfWeight53: "ev, source, nsig: ev.WeightPdfVariations(ev, 53)"
        LHEPdfWeight54: "ev, source, nsig: ev.WeightPdfVariations(ev, 54)"
        LHEPdfWeight55: "ev, source, nsig: ev.WeightPdfVariations(ev, 55)"
        LHEPdfWeight56: "ev, source, nsig: ev.WeightPdfVariations(ev, 56)"
        LHEPdfWeight57: "ev, source, nsig: ev.WeightPdfVariations(ev, 57)"
        LHEPdfWeight58: "ev, source, nsig: ev.WeightPdfVariations(ev, 58)"
        LHEPdfWeight59: "ev, source, nsig: ev.WeightPdfVariations(ev, 59)"
        LHEPdfWeight60: "ev, source, nsig: ev.WeightPdfVariations(ev, 60)"
        LHEPdfWeight61: "ev, source, nsig: ev.WeightPdfVariations(ev, 61)"
        LHEPdfWeight62: "ev, source, nsig: ev.WeightPdfVariations(ev, 62)"
        LHEPdfWeight63: "ev, source, nsig: ev.WeightPdfVariations(ev, 63)"
        LHEPdfWeight64: "ev, source, nsig: ev.WeightPdfVariations(ev, 64)"
        LHEPdfWeight65: "ev, source, nsig: ev.WeightPdfVariations(ev, 65)"
        LHEPdfWeight66: "ev, source, nsig: ev.WeightPdfVariations(ev, 66)"
        LHEPdfWeight67: "ev, source, nsig: ev.WeightPdfVariations(ev, 67)"
        LHEPdfWeight68: "ev, source, nsig: ev.WeightPdfVariations(ev, 68)"
        LHEPdfWeight69: "ev, source, nsig: ev.WeightPdfVariations(ev, 69)"
        LHEPdfWeight70: "ev, source, nsig: ev.WeightPdfVariations(ev, 70)"
        LHEPdfWeight71: "ev, source, nsig: ev.WeightPdfVariations(ev, 71)"
        LHEPdfWeight72: "ev, source, nsig: ev.WeightPdfVariations(ev, 72)"
        LHEPdfWeight73: "ev, source, nsig: ev.WeightPdfVariations(ev, 73)"
        LHEPdfWeight74: "ev, source, nsig: ev.WeightPdfVariations(ev, 74)"
        LHEPdfWeight75: "ev, source, nsig: ev.WeightPdfVariations(ev, 75)"
        LHEPdfWeight76: "ev, source, nsig: ev.WeightPdfVariations(ev, 76)"
        LHEPdfWeight77: "ev, source, nsig: ev.WeightPdfVariations(ev, 77)"
        LHEPdfWeight78: "ev, source, nsig: ev.WeightPdfVariations(ev, 78)"
        LHEPdfWeight79: "ev, source, nsig: ev.WeightPdfVariations(ev, 79)"
        LHEPdfWeight80: "ev, source, nsig: ev.WeightPdfVariations(ev, 80)"
        LHEPdfWeight81: "ev, source, nsig: ev.WeightPdfVariations(ev, 81)"
        LHEPdfWeight82: "ev, source, nsig: ev.WeightPdfVariations(ev, 82)"
        LHEPdfWeight83: "ev, source, nsig: ev.WeightPdfVariations(ev, 83)"
        LHEPdfWeight84: "ev, source, nsig: ev.WeightPdfVariations(ev, 84)"
        LHEPdfWeight85: "ev, source, nsig: ev.WeightPdfVariations(ev, 85)"
        LHEPdfWeight86: "ev, source, nsig: ev.WeightPdfVariations(ev, 86)"
        LHEPdfWeight87: "ev, source, nsig: ev.WeightPdfVariations(ev, 87)"
        LHEPdfWeight88: "ev, source, nsig: ev.WeightPdfVariations(ev, 88)"
        LHEPdfWeight89: "ev, source, nsig: ev.WeightPdfVariations(ev, 89)"
        LHEPdfWeight90: "ev, source, nsig: ev.WeightPdfVariations(ev, 90)"
        LHEPdfWeight91: "ev, source, nsig: ev.WeightPdfVariations(ev, 91)"
        LHEPdfWeight92: "ev, source, nsig: ev.WeightPdfVariations(ev, 92)"
        LHEPdfWeight93: "ev, source, nsig: ev.WeightPdfVariations(ev, 93)"
        LHEPdfWeight94: "ev, source, nsig: ev.WeightPdfVariations(ev, 94)"
        LHEPdfWeight95: "ev, source, nsig: ev.WeightPdfVariations(ev, 95)"
        LHEPdfWeight96: "ev, source, nsig: ev.WeightPdfVariations(ev, 96)"
        LHEPdfWeight97: "ev, source, nsig: ev.WeightPdfVariations(ev, 97)"
        LHEPdfWeight98: "ev, source, nsig: ev.WeightPdfVariations(ev, 98)"
        LHEPdfWeight99: "ev, source, nsig: ev.WeightPdfVariations(ev, 99)"
        LHEPdfWeight100: "ev, source, nsig: ev.WeightPdfVariations(ev, 100)"
        LHEPdfWeight101: "ev, source, nsig: ev.WeightPdfVariations(ev, 101)"
        LHEPdfWeight102: "ev, source, nsig: ev.WeightPdfVariations(ev, 102)"
        LHEPdfWeight103: "ev, source, nsig: ev.WeightPdfVariations(ev, 103)"
    Data:
        IsCertified: "ev, source, nsig: ev.IsCertified(ev)"
